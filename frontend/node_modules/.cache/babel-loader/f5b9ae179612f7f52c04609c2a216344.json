{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { bookListReducer, bookDetailsReducer } from './reducers/bookReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  bookList: bookListReducer,\n  bookDetails: bookDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","bookListReducer","bookDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","bookList","bookDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/nedel/Desktop/MERN Bookshop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { bookListReducer, bookDetailsReducer } from './reducers/bookReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n} from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer,} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  bookList: bookListReducer,\r\n  bookDetails: bookDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,yBAAyB;AAC7E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,EACxBC,eAAe,EACfC,iBAAiB,QACZ,yBAAyB;AAChC,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,0BAA0B;AAEvH,MAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC9BkB,QAAQ,EAAEd,eAAe;EACzBe,WAAW,EAAEd,kBAAkB;EAC/Be,IAAI,EAAEd,WAAW;EACjBe,SAAS,EAAEd,gBAAgB;EAC3Be,YAAY,EAAEd,mBAAmB;EACjCe,WAAW,EAAEd,kBAAkB;EAC/Be,iBAAiB,EAAEd,wBAAwB;EAC3Ce,QAAQ,EAAEd,eAAe;EACzBe,WAAW,EAAEb,kBAAkB;EAC/Bc,YAAY,EAAEb,mBAAmB;EACjCc,QAAQ,EAAEb,eAAe;EACzBc,WAAW,EAAEb;AACf,CAAC,CAAC;AAEF,MAAMc,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMK,YAAY,GAAG;EACnBjB,IAAI,EAAE;IAAEkB,SAAS,EAAER,oBAAoB;IAAES,eAAe,EAAEH;EAA4B,CAAC;EACvFf,SAAS,EAAE;IAAEmB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACvC,KAAK,CAAC;AAE1B,MAAMwC,KAAK,GAAG3C,WAAW,CACvBkB,OAAO,EACPoB,YAAY,EACZlC,mBAAmB,CAACF,eAAe,CAAC,GAAGwC,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}